{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Kahuna, the IndexedDB-Manager","text":"<p>Kahuna is a browser extension for managing IndexedDB databases and is available for Firefox and Chromium based browsers, such as Google Chrome, Edge and Opera. Kahuna supports developers to manage databases and provides convenient access to the data they contain. Interested users can use Kahuna to satisfy their curiosity and find out what data the websites they visit permanently store in their browser.</p> <p></p> <p>By nature, an IndexedDB database contains object stores in which arbitrary JavaScript objects can be stored. This differs from relational databases, which store data in tables with a fixed column schema. However, since Kahuna displays the data from object stores in a tabular view, the term table is generally used in both this documentation and the application when referring to an object store.</p>"},{"location":"#screenshots","title":"Screenshots","text":""},{"location":"#installation","title":"Installation","text":"<p>To download and install the extension, please use the Chrome Web Store for Chrome and Chromium based browsers and the Firefox Addons Page for Firefox.</p>"},{"location":"#installation-from-source","title":"Installation from Source","text":"<p>Additionally, it is possible to build and install Kahuna from source code. For this, see the instructions on github.</p>"},{"location":"#first-steps","title":"First Steps","text":"<p> After Kahuna has been installed, there is an entry with its icon in the extension menu of the browser. If IndexedDB databases are stored for the website dispayed by the browser, a tooltip with the number of databases is added. Use 'Pin to Toolbar' to permanently attach the icon to the browser toolbar.</p> <p>By clicking on the icon, the Kahuna layer is displayed above the website. Another click or the 'Esc' button close the layer again.</p> <p>As an alternative, the keyboard shortcut  (the keys 'Ctrl' and '.') can be used to toggle the layer. If the keyboard shortcut does not work or you want to change it, follow these instructions for Firefox or for Chrome visit chrome://extensions/ and use the 'Keyboard Shortcuts' menu."},{"location":"configuration/","title":"Configuration","text":"<p>Kahuna's configuration is hierarchical; it can be configured globally for all origins, for individual databases within an origin, or for individual tables within a database. More general configuration settings serve as default values \u200b\u200bfor subordinate configurations.</p> <p>In each view the configuration is invoked with the   icon in the title bar. The tabs behavior, columns, filters, import, export and in the global view application must be clicked to switch to the respective configuration domain.</p> <p></p> <p>When invoked from the database view or the table view, the  icon at the right of the headline can be used to switch to the parent configurations and back.</p> <p> next to a setting indicates that the setting has its default value, as set by the parent configuration or by the application.</p> <p>The  icon indicates that the setting has been changed and saved since the configuration was invoked and that the change will be undone if the undo changes button is pressed.</p>"},{"location":"configuration/#application","title":"Application","text":""},{"location":"configuration/#behavior","title":"Behavior","text":""},{"location":"configuration/#columns","title":"Columns","text":""},{"location":"configuration/#filters","title":"Filters","text":""},{"location":"configuration/#import","title":"Import","text":"<p>The screenshot shows the default settings for importing data from files in Dexie, JSON or CSV format. Some options are only relevant for certain import formats or for certain import scenarios. Details can be found in the explanations for the individual items.</p> <ol> <li> <p>Select which of the supported data formats \u2014 Dexie, CSV or JSON \u2014 is preset for data import. This setting is only relevant for importing data into tables. When using the Import Database option in the Origin Tools or the Import Data option in the Database Tools, the Dexie format is always fixed.</p> </li> <li> <p>This setting determines how empty values \u200b\u200bin CSV import files are handled. You can choose to import them as empty string, null, or undefined values. The fourth option, exclude, specifies that imported datasets will not have a property for empty values.</p> </li> <li> <p>If an import file in CSV format or JSON format contains values \u200b\u200bfor the unnamed primary key of a table, the field name from the import file must be entered here so that the values \u200b\u200bfrom that field are adopted. If no entry is made in this field, for unnamed autoincrement primary keys values \u200b\u200bwill be generated. If the unnamed primary key is not defined as autoincrement and no existing field name is entered, no data will be imported. If the target table has a named primary key, this setting is not used. The setting is relevant for JSON and CSV import.</p> </li> <li> <p>Turn on if all records should be deleted from the tables before importing.</p> </li> <li> <p>Controls what happens if a table already has a record with a value for a primary key that is also present in the import file. An existing record is replaced if checked, it remains if unchecked.</p> </li> <li> <p>Controls what happens if an error occurs during import. If checked, no data is imported at all. If unchecked, all data up to the point of the error is imported into the target database.</p> </li> <li> <p>On Dexie import into an existing database, this controls whether the name of the source database from which the export file was created may differ from the name of the target database.</p> </li> <li> <p>On Dexie import into an existing database: Is it allowed for the versions of the source and target databases to differ?</p> </li> <li> <p>On Dexie import into an existing database: Is it an error or not if the primary key definition of tables in the source and target database differ.</p> </li> <li> <p>On Dexie import into an existing database: Is it allowed that the import file contains empty tables that do not exist in the target database.</p> </li> <li> <p>If checked, the data of a field from the import file whose name is entered in  will be imported as a single value. Otherwise, the entire data of all fields will be imported as an object. In other words, this enables import when a table is used as a key-value store rather than an object store. If the specified field is empty for a record in CSV import or not present in JSON import, the complete record is imported as an object. This setting is supported for JSON and CSV imports and when the table has an unnamed primary key. If the primary key is not an autoincrement primary key, the name of a designated field must be entered in .</p> </li> <li> <p>The name of a field from the import file whose values \u200b\u200bshould be imported as direct values in a key-value store. For this setting to be applied,  must be checked. Supported for JSON and CSV imports.</p> </li> </ol>"},{"location":"configuration/#export","title":"Export","text":"<p>The screenshot shows the default settings that are applied when exporting data in Dexie, JSON and CSV format.</p> <ol> <li> <p>Select which of the supported data formats \u2014 Dexie, CSV or JSON \u2014 is preset for data export. This setting is only relevant for exporting data from tables. When Export Database from the Database Tools is used, Dexie format is fixed and cannot be changed.</p> </li> <li> <p>A template can be entered to be used as the file name for exported databases. The available variables that can be used in the template are listed below under Filename Templates. The template can be modified during the export process.</p> </li> <li> <p>The file name template for exporting table data when using the Table Tools. For the available variables see Filename Templates.</p> </li> <li> <p>The file name template for exporting table data when using the Selection Tools. For the available variables see Filename Templates.</p> </li> <li> <p>For tables with unnamed primary keys, this setting is used as the name for the primary key when exporting to JSON and CSV formats. If no name is entered here, unnamed primary keys will be excluded from the export.</p> </li> <li> <p>If a table is exported that is used as a key-value store, this setting specifies the name for the contained values \u200b\u200bin the export file. Relevant for JSON and CSV exports for tables with an unnamed primary key.</p> </li> <li> <p>When exporting in Dexie format and this option is checked, the exported files will be formatted readably, with line breaks and indentation.</p> </li> <li> <p>Check this option if you want the exported data to be formatted readable when exporting to JSON.</p> </li> </ol>"},{"location":"configuration/#filename-templates","title":"Filename Templates","text":"<p>The templates that can be used for file names for exported data are composed of strings and variables enclosed in curly braces. For example, the template <code>{db}-{table}-{date}.{format}</code> will be replaced by the file name <code>MyDB-MyTable-250427.csv</code> when exporting the table MyTable from the database MyDB in CSV format on April 25, 2025.</p> <p>The available variables are</p> Variable Replacement Notes format either <code>dexie</code>, <code>json</code> or <code>csv</code> db name of the database being exported table name of table the being exported not available for database export date current date in the format <code>yymmdd</code> 2 digits year, 2 digits month, 2 digits day of month time current time in the format <code>hhmmss</code> 2 digits hour, 2 digits minute, 2 digits second h hour 2 digits m minute 2 digits s second 2 digits"},{"location":"database/","title":"Database View","text":"<p>Central to this view is a list in which the tables (aka object stores) belonging to a database are displayed. If it is an empty database that does not contain any tables, there is a link that can be used to invoke Create Table.</p> <p>In the database view, the  icon in the window title bar opens the database tools, while the  icon opens the configuration options that apply to this database and serve as default settings for the tables it contains.</p> <p>Clicking on the database part of the breadcrumb navigation reloads the database list or returns to it if a datatable is displayed in the current view.</p>"},{"location":"database/#table-list","title":"Table List","text":"<p>For each table, its name, its primary key and further indexes, and the number of records it contains are displayed. </p> <p></p> <p>If you hover one of the rows, another  icon will appear next to the row, which can be used to open the table tools. To switch to the view of one of the data tables, click on the corresponding row in the table.</p>"},{"location":"database/#database-tools","title":"Database Tools","text":"<p>To invoke the database tools use either the gear icon  in the window title bar of the database view or the same icon next to a database row in the origin view. You can choose to import data or export the database, create an additional table, modify the database schema or to delete the database.</p> <p></p>"},{"location":"database/#export-database","title":"Export Database","text":"<p>The database export uses the dexie format for the output file, a json-based format that supports all data types (beside CryptoKey) that can be stored in IndexedDB databases.</p> <p></p> <p>Hovering the  icon displays the export options that will be applied. To adjust the export options, click the  icon on the right. The export options are documented in Configuration / Export.</p>"},{"location":"database/#import-data","title":"Import Data","text":"<p>Under import data in the Database Tools, a file in dexie format can be selected. This file can contain the export of an entire database, the export of a single table, or the export of selected data records from a table, depending on whether it was created in the Database Tools, the Table Tools, or the Selection Tools.</p> <p>Hovering the  icon displays the import options that will be applied. To adjust the import options, click the  icon. The import options are documented in Configuration / Import.</p> <p></p>"},{"location":"database/#create-table","title":"Create Table","text":"<p>If create table is selected, you can enter the name for a new table and a string representation of the indexes to be created for the table. Any string is allowed as the table name, with the only restriction that it must be unique within the database.</p> <p>Within the indexes string, the individual indexes are separated by commas. Since the keypaths parts of an index refer to object properties, a valid keypath consists of valid JavaScript identifiers, possibly separated by dots. The complete syntax for index strings is described in the dexie documentation.</p> <p></p>"},{"location":"database/#modify-database-schema","title":"Modify Database Schema","text":"<p>When edit database schema is selected from the Database Tools, a textarea containing the database schema as a JavaScript object is displayed below the table with the databases.</p> <p></p> <p>Adding additional rows to the JavaScript object will create new tables in the database. Changing an existing table name will also result in the creation of a new table with the new name. To delete a table, replace the index specification with <code>null</code>. The index specification can be customized as desired, with the exception that changing the primary key, the first part of the specification, is not allowed. A table whose row is completely removed remains unchanged, the same result as for a row that is not changed at all.</p> <p>If <code>const newSchema</code> from the example above is changed as follows and the execute button is clicked, the <code>air quality</code> table is deleted, in the <code>meteorites</code> table the <code>year</code> index is deleted and a <code>category</code> index is added , and a new <code>sattelites</code> table is created with an auto increment primary key.</p> <pre><code>const newSchema = {\n    \"air quality\": null,\n    meteorites: \"id,&amp;name,category\",\n    sattelites: \"++\"\n};\n</code></pre> <p>When editing <code>newSchema</code>, make sure that a valid JavaScript object is preserved, otherwise an error message will be displayed when executing</p>"},{"location":"database/#delete-database","title":"Delete Database","text":"<p>After confirmation, the selected database will be permanently deleted. To avoid damage, it is always a good idea to create a backup beforehand using export database.</p>"},{"location":"datatable/","title":"Datatable View","text":""},{"location":"datatable/#table-tools","title":"Table Tools","text":""},{"location":"datatable/#import-data","title":"Import Data","text":""},{"location":"datatable/#export-data","title":"Export Data","text":""},{"location":"datatable/#empty-table","title":"Empty Table","text":""},{"location":"datatable/#drop-table","title":"Drop Table","text":""},{"location":"datatable/#selection-tools","title":"Selection Tools","text":""},{"location":"datatable/#javascript-textarea","title":"Javascript Textarea","text":""},{"location":"origin/","title":"Origin View","text":"<p>IndexedDB databases are stored by following the same-origin policy. A website can store and access data only for its own origin, consisting of protocol, domain and port, and Kahuna displays the databases stored for an origin. This databases, if any, are listed on the initial view when Kahuna is invoked. If no databases exist you get offered to import a database or to create a new one. While in the origin view, importing and creating new databases is also posible by clicking on the  icon in the window title bar. The same gear icon invokes the database tools while in the database view and the table tools if a datatable is displayed.</p> <p>The  icon in the window title bar of the database list invokes the application's global configuration and settings, which also serve as default settings for all databases and tables.</p>"},{"location":"origin/#database-list","title":"Database List","text":"<p>To refresh the list or to return to this list from another view, click on the origin part of the breadcrump in the window title. To display the table list with the details for one of the listed databases, click on the corresponding row in the table.</p> <p>In the application settings, item , you can enter table names that should not appear in the list. Empty tables are listed here by default, even if they are excluded from notifications in the settings, item .</p> <p>When hovering a row, another  icon fades in that let you apply the database related tools. </p> <p></p>"},{"location":"origin/#origin-tools","title":"Origin Tools","text":"<p>The layer with the origin tools is displayed when  is clicked in the window title bar of the database list. With the origin tools, databases can be imported and new, empty databases can be created.</p>"},{"location":"origin/#import-database","title":"Import Database","text":"<p> A new database will be created or an existing database will be overwritten if a file in Dexie format is selected. The settings applied are listed when the  icon is hovered. Most of the settings are relevant only for overwriting an existing database and they are explained in import configuration. Once a file has been selected, the import will start; no further activation is requested.</p> <p></p>"},{"location":"origin/#create-database","title":"Create Database","text":"<p> This creates a new database with the specified name. Entering a table name and the associated indexes is optional. If used, the specified table becomes part of the created database. In the example shown on the left, the database <code>statistics</code> is created, which contains a table <code>counter</code>. The table will have an autoincrement primary key and additional indexes for the fields <code>url</code> and <code>ts</code>. The syntax for index strings is described in the dexie documentation.</p> <p></p>"}]}