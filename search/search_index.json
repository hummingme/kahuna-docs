{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Kahuna, the IndexedDB-Manager","text":"<p>Kahuna is a browser extension for managing IndexedDB databases and is available for Firefox and Chromium based browsers, such as Google Chrome, Edge and Opera. Kahuna supports developers to manage databases and provides convenient access to the data they contain. Interested users can use Kahuna to satisfy their curiosity and find out what data the websites they visit permanently store in their browser.</p> <p></p> <p>By nature, an IndexedDB database contains object stores in which arbitrary JavaScript objects can be stored. This differs from relational databases, which store data in tables with a fixed column schema. However, since Kahuna displays the data from object stores in a tabular view, the term table is generally used in both this documentation and the application when referring to an object store.</p> <p>This documentation applies to the latest version of Kahuna, version v1.5.0. If an older version is used, we recommend updating.</p>"},{"location":"#screenshots","title":"Screenshots","text":""},{"location":"#installation","title":"Installation","text":"<p>To download and install the extension, please use the Chrome Web Store for Chrome and Chromium based browsers and the Firefox Addons Page for Firefox.</p>"},{"location":"#installation-from-source","title":"Installation from Source","text":"<p>Additionally, it is possible to build and install Kahuna from source code. For this, see the instructions on github.</p>"},{"location":"#first-steps","title":"First Steps","text":"<p> After Kahuna has been installed, there is an entry with its icon in the extension menu of the browser. If IndexedDB databases are stored for the website dispayed by the browser, a tooltip with the number of databases is added. Use 'Pin to Toolbar' to permanently attach the icon to the browser toolbar.</p> <p>By clicking on the icon, the Kahuna layer is displayed above the website. Another click or the 'Esc' button closes the layer again.</p> <p>As an alternative, the keyboard shortcut  (the keys 'Ctrl' and '.') can be used to toggle the layer. If the keyboard shortcut does not work or you want to change it, follow these instructions for Firefox or for Chrome visit chrome://extensions/ and use the 'Keyboard Shortcuts' menu."},{"location":"configuration/","title":"Configuration","text":"<p>Kahuna's configuration is hierarchical; it can be configured globally for all origins, for individual databases within an origin, or for individual tables within a database. More general configuration settings serve as default values \u200b\u200bfor subordinate configurations.</p> <p>In each view the configuration is invoked with the  icon in the title bar. The tabs behavior, columns, filters, import, export and in the global view application must be clicked to switch to the respective configuration domain.</p> <p></p> <p>When invoked from the database view or the table view, the  icon at the right of the headline can be used to switch to the parent configurations and back.</p> <p> next to a setting indicates that the setting has its default value, as set by the parent configuration or by the application.</p> <p>The  icon indicates that the setting has been changed and saved since the configuration was invoked and that the change will be undone if the undo changes button is pressed.</p>"},{"location":"configuration/#application","title":"Application","text":"<p>The application tab is used for settings that control the properties of the application itself and not how databases, tables or data are handled. If this tab is not displayed, use the  icon and switch to the settings for global  application and defaults.</p> <ol> <li> <p>Sets the color scheme Kahuna is displayed in. You can choose between the preferred color scheme according to your browser settings, a dark color scheme, and a light color scheme.</p> </li> <li> <p>Specifies whether  should be applied for the origin of the currently displayed website or whether a dark or light color scheme should be used instead.</p> </li> <li> <p>If set, empty databases (databases that do not contain any tables) are not counted for the notification in the browser action tooltip. Databases that contain only empty tables without records are not considered empty. Empty databases are always included in the database list unless they are excluded in . </p> </li> <li> <p>A list of database names that should neither be counted for the notification tooltip nor appear in the database list. Use the  icon to add names and the  icon behind a name to remove it from the list. The default entry __dbnames is used by the dexie library for older browsers that do not support listing all existing databases.</p> </li> <li> <p>After activation and subsequent confirmation, all saved settings will be reset to their default values. The deleted data also includes the defined filters and columns, saved JavaScript code, the window position and size and which notification messages should no longer be displayed.</p> </li> </ol>"},{"location":"configuration/#behavior","title":"Behavior","text":"<p>The image shows how to configure Kahuna's behavior for the selected table meteroites, while displaying this table in the datatable view. To configure settings for all tables in a database or globally, first switch to the database settings or the global settings via the  icon.</p> <ol> <li> <p>By default, a confirmation is requested when delete row is clicked for a record in the datatable. Uncheck this option to disable the confirmation request before deletion.</p> </li> <li> <p>Specifies whether a JavaScript textarea is displayed beneath the datatable.</p> </li> <li> <p>If checked, a text with the available global variables is displayed in the JavaScript textarea.</p> </li> <li> <p>Select the preferred method for executing code entered in the JavaScript textarea. In Firefox, where Manifest version 2 is used, the methods webworker and unsafeEval are available. With webworker, the execution is isolated and the application is not blocked or affected. With unsafeEval, the code gets access to the web page's environment, allowing interactions with the DOM. In Chromium-based browsers using Manifest 3, webworker is the only option, as <code>unsafe-eval</code> is blocked by the content security policy.</p> </li> <li> <p>The number of rows the datatable displays on a page.</p> </li> <li> <p>Errors, warnings, and information messages displayed at the bottom of the window disappear after the number of seconds specified here. If a zero is entered, the messages will remain displayed until clicked.</p> </li> <li> <p>Sets the currently displayed table as the initial view when Kahuna starts. If the table does not exist, the database list is displayed instead. If this is checked in the database-wide settings, the table list is displayed at startup.</p> </li> </ol>"},{"location":"configuration/#columns","title":"Columns","text":"<p>In the columns configuration the columns for data fields section only exists when the settings are made for an individual table. While database-wide or global settings are chosen, only  can be set as the default for all tables.</p> <ol> <li> <p>When invoked, the datatable analyses the data of the first page to identify the existing columns. If the data objects on subsequent pages have additional properties, this setting determines how they are handled. If checked, they are immediately added to the table as columns. If not checked, an indicator with the number of the found properties will be displayed to the right of the column headers. Hovering the indicator allows you to add them all as columns or to switch to the columns configuration.</p> </li> <li> <p>Specifies the dimension with which image previews are displayed.</p> </li> <li> <p>Grab a position number with the mouse to change the column order by drag &amp; drop.</p> </li> <li> <p>date, url, and image are the selectable format options that are applied when the column contains suitable data for formatting. For date this are Integer values \u200b\u200bwhich when interpreted as timestamps(either by themselves or multiplied by 1000), are within the period from 10 years in the past to 20 years in the future. For url it must be a String that begins with <code>https:</code>, <code>http:</code> or <code>file:</code>, or the string must look like a web address in order to be displayed as an outgoing link. To be displayed as an image preview, a data value must be a Blob or a File whose type property is a MimeType that can be displayed by web browsers as an image</p> </li> <li> <p>Unckeck to hide a column from the datatable view. The column in which the primary key is displayed cannot be hidden.</p> </li> </ol>"},{"location":"configuration/#filters","title":"Filters","text":"<p>The filters tab is primarily used to define the filters that are displayed above a datatable. While the global or database-wide settings are being configured, this view is mostly empty, except .</p> <ol> <li> <p>The numbering corresponds to the order of the filters in the datatable view. To change the order, grab a number with the mouse and drag &amp; drop it to its new position.</p> </li> <li> <p>A selection list of the data field for which the filter should be applied.</p> </li> <li> <p>Selection of the filter type. In detail, these are = (equal), &lt; (below), &gt; (above), \u2260 (unequal), ..% (starts with), %.. (ends with), %..% (contains), (empty) (captures empty values) and /regexp/ (matches a regular expression). When using a regexp filter, only the pattern must be entered, not the slashes.</p> </li> <li> <p>The options in this column are varying depending on the filter type selected in . The option case sensitive can be set for the filter types =, \u2260, ..%, %.., %..%, and /regexp/. Option include bounds is possible with &lt; and &gt;. For the empty filter type you can set which values \u200b\u200bshould be considered empty (undefined, null, empty strings , empty arrays or empty objects).</p> </li> <li> <p>Click any of the  icons to remove a filter.</p> </li> <li> <p>Click the  icon to add a filter.</p> </li> <li> <p>When checked, filter settings and filters are highlighted when no index is used to apply them. This is not a problem for small tables (say a few thousand records) or if the number of records to which they are applied is reduced by additional, indexed filters. However, for large tables and without additional index-based result restrictions, the search will be significantly slower.</p> </li> </ol>"},{"location":"configuration/#import","title":"Import","text":"<p>The screenshot shows the default settings for importing data from files in Dexie, JSON or CSV format. Some options are only relevant for certain import formats or for certain import scenarios. Details can be found in the explanations for the individual items.</p> <ol> <li> <p>Select which of the supported data formats \u2014 Dexie, CSV or JSON \u2014 is preset for data import. This setting is only relevant for importing data into tables. When using the Import Database option in the Origin Tools or the Import Data option in the Database Tools, the Dexie format is always fixed.</p> </li> <li> <p>This setting determines how empty values \u200b\u200bin CSV import files are handled. You can choose to import them as empty string, null, or undefined values. The fourth option, exclude, specifies that imported datasets will not have a property for empty values.</p> </li> <li> <p>If an import file in CSV format or JSON format contains values \u200b\u200bfor the unnamed primary key of a table, the field name from the import file must be entered here so that the values \u200b\u200bfrom that field are adopted. If no entry is made in this field, for unnamed autoincrement primary keys values \u200b\u200bwill be generated. If the unnamed primary key is not defined as autoincrement and no existing field name is entered, no data will be imported. If the target table has a named primary key, this setting is not used. The setting is relevant for JSON and CSV import.</p> </li> <li> <p>Turn on if all records should be deleted from the tables before importing.</p> </li> <li> <p>Controls what happens if a table already has a record with a value for a primary key that is also present in the import file. An existing record is replaced if checked, it remains if unchecked.</p> </li> <li> <p>Controls what happens if an error occurs during import. If checked, no data is imported at all. If unchecked, all data up to the point of the error is imported into the target database.</p> </li> <li> <p>On Dexie import into an existing database, this controls whether the name of the source database from which the export file was created may differ from the name of the target database.</p> </li> <li> <p>On Dexie import into an existing database: Is it allowed for the versions of the source and target databases to differ?</p> </li> <li> <p>On Dexie import into an existing database: Is it an error or not if the primary key definition of tables in the source and target database differ.</p> </li> <li> <p>On Dexie import into an existing database: Is it allowed that the import file contains empty tables that do not exist in the target database.</p> </li> <li> <p>If checked, the data of a field from the import file whose name is entered in  will be imported as a single value. Otherwise, the entire data of all fields will be imported as an object. In other words, this enables import when a table is used as a key-value store rather than an object store. If the specified field is empty for a record in CSV import or not present in JSON import, the complete record is imported as an object. This setting is supported for JSON and CSV imports and when the table has an unnamed primary key. If the primary key is not an autoincrement primary key, the name of a designated field must be entered in .</p> </li> <li> <p>The name of a field from the import file whose values \u200b\u200bshould be imported as direct values in a key-value store. For this setting to be applied,  must be checked. Supported for JSON and CSV imports.</p> </li> </ol>"},{"location":"configuration/#export","title":"Export","text":"<p>The screenshot shows the default settings that are applied when exporting data in Dexie, JSON and CSV format.</p> <ol> <li> <p>Select which of the supported data formats \u2014 Dexie, CSV or JSON \u2014 is preset for data export. This setting is only relevant for exporting data from tables. When Export Database from the Database Tools is used, Dexie format is fixed and cannot be changed.</p> </li> <li> <p>A template can be entered to be used as the file name for exported databases. The available variables that can be used in the template are listed below under Filename Templates. The template can be modified during the export process.</p> </li> <li> <p>The file name template for exporting table data when using the Table Tools. For the available variables see Filename Templates.</p> </li> <li> <p>The file name template for exporting table data when using the Selection Tools. For the available variables see Filename Templates.</p> </li> <li> <p>For tables with unnamed primary keys, this setting is used as the name for the primary key when exporting to JSON and CSV formats. If no name is entered here, unnamed primary keys will be excluded from the export.</p> </li> <li> <p>If a table is exported that is used as a key-value store, this setting specifies the name for the contained values \u200b\u200bin the export file. Relevant for JSON and CSV exports for tables with an unnamed primary key.</p> </li> <li> <p>When exporting in Dexie format and this option is checked, the exported files will be formatted readably, with line breaks and indentation.</p> </li> <li> <p>Check this option if you want the exported data to be formatted readable when exporting to JSON.</p> </li> </ol>"},{"location":"configuration/#filename-templates","title":"Filename Templates","text":"<p>The templates that can be used for file names for exported data are composed of strings and variables enclosed in curly braces. For example, the template <code>{db}-{table}-{date}.{format}</code> will be replaced by the file name <code>MyDB-MyTable-250427.csv</code> when exporting the table MyTable from the database MyDB in CSV format on April 25, 2025.</p> <p>The available variables are</p> Variable Replacement Notes format either <code>dexie</code>, <code>json</code> or <code>csv</code> db name of the database being exported table name of table the being exported not available for database export date current date in the format <code>yymmdd</code> 2 digits year, 2 digits month, 2 digits day of month time current time in the format <code>hhmmss</code> 2 digits hour, 2 digits minute, 2 digits second h hour 2 digits m minute 2 digits s second 2 digits"},{"location":"database/","title":"Database View","text":"<p>Central to this view is a list in which the tables (aka object stores) belonging to a database are displayed. If it is an empty database that does not contain any tables, there is a link that can be used to invoke Create Table.</p> <p>In the database view, the  icon in the window title bar opens the database tools, while the  icon opens the configuration options that apply to this database and serve as default settings for the tables it contains.</p> <p>Clicking on the database part of the breadcrumb navigation reloads the database list or returns to it if a datatable is displayed in the current view.</p>"},{"location":"database/#table-list","title":"Table List","text":"<p>For each table, its name, its primary key and further indexes, and the number of records it contains are displayed. </p> <p></p> <p>If you hover one of the rows, another  icon will appear next to the row, which can be used to open the table tools. To switch to the view of one of the data tables, click on the corresponding row in the table.</p>"},{"location":"database/#database-tools","title":"Database Tools","text":"<p>To invoke the database tools use either the gear icon  in the window title bar of the database view or the same icon next to a database row in the origin view. You can choose to export the database, create a copy, edit the database schema, create additional tables, import data or to delete the database.</p> <p></p>"},{"location":"database/#export-database","title":"Export Database","text":"<p>The database export uses the dexie format for the output file, a json-based format that supports all data types (beside CryptoKey) that can be stored in IndexedDB databases.</p> <p></p> <p>Hovering the  icon displays the export options that will be applied. To adjust the export options, click the  icon on the right. The export options are documented in Configuration / Export.</p>"},{"location":"database/#copy-database","title":"Copy Database","text":"<p>The database name is pre-filled with a unique name for the copied database and the database version with the version of the source database.</p> <p>If only an empty database with the schema of the source database is to be created, the default option copy data must be deselected.</p> <p>The last checkbox controls what happens after the action is completed: switch to the table list of the newly created database or keep the current view.</p> <p></p>"},{"location":"database/#edit-schema","title":"Edit Schema","text":"<p>Using the schema editor, new object stores can be created: Clicking the  icon adds a row to the table in which a table name, the primary key and additional indices can be specified. Clicking the  icon at the end of a row deletes object stores. Only after execute is the database schema updated, before that the changes can be undone with reset. The close button discards all changes made and terminates the schema editor.</p> <p></p> <p>The only restrictions for the name of a new table are that it must be unique in the database and that it is a non-empty JavaScript string. Renaming existing tables is not supported; instead, copy table must be used.</p> <p>To define the indices, the syntax introduced by the Dexie library is used. In short: ++ represents an auto-incrementing primary key, an ampersand &amp; denotes a unique key, and an asterisk * a multi-entry array index. Square brackets [ ] around a list of identifiers represent a compound index. Identifiers for an index or the parts of a compound index must be valid JavaScript identifiers, possibly with periods as separators if they are key paths to inner object properties.</p> <p>In the input fields of the Indexes column, several indexes can be defined for a table, separated by commas. Changing the primary key of an existing table is not possible.</p>"},{"location":"database/#create-table","title":"Create Table","text":"<p>If create table is selected, you can enter the name for a new table and a string representation of the indexes to be created for the table. Any string is allowed as the table name, with the only restriction that it must be unique within the database.</p> <p>Within the indexes string, the individual indexes are separated by commas. Since the keypaths parts of an index refer to object properties, a valid keypath consists of valid JavaScript identifiers, possibly separated by dots. The complete syntax for index strings is described in the dexie documentation.</p> <p>As with all actions that change the database schema, the database version is increased.</p> <p></p>"},{"location":"database/#import-data","title":"Import Data","text":"<p>Under import data in the Database Tools, a file in dexie format can be selected. This file can contain the export of an entire database, the export of a single table, or the export of selected data records from a table, depending on whether it was created in the Database Tools, the Table Tools, or the Selection Tools.</p> <p>Hovering the  icon displays the import options that will be applied. To adjust the import options, click the  icon. The import options are documented in Configuration / Import.</p> <p></p>"},{"location":"database/#delete-database","title":"Delete Database","text":"<p>After confirmation, the selected database will be permanently deleted. To avoid damage, it is always a good idea to create a backup beforehand using export database.</p>"},{"location":"datatable/","title":"Datatable View","text":"<p>The datatable is where the data contained in an object store is displayed in a grid view. Combinable filters allow to narrow down the displayed data in a variety of ways. And the data can be edited or deleted individually, in any selection, or in its entirety. If a table is empty, data can be imported if it is in Dexie, JSON, or CSV format. Or, the javascript textarea can be used to insert records.</p> <ol> <li> <p>The caption informs about the name and number of records in the displayed table.</p> </li> <li> <p>With the  icon on the left side of the filter elements the filter configuration can be invoked.</p> </li> <li> <p>All filters configured for the table are displayed side by side. The order can be adjusted via drag &amp; drop in the filter configuration. As long as no search value is entered and always when hovering with the mouse, the name of the filter field and the filter type are visible.</p> </li> <li> <p>The search is triggered when the  button is clicked or by pressing the Return key while entering a search value. Clicking the  button resets all search fields. Search entries are saved as part of the filter configuration so that they remain active when a table is accessed again at a later time.</p> </li> <li> <p>The table navigation consists of the four chevron buttons to scroll forward and backward through the records, two input fields to display and enter the start and end position of the displayed records and the total number of records that correspond to the search entries. How many records are displayed per page is set in the behavior configuration.</p> </li> <li> <p>The order of the datatable columns is set via drag &amp; drop in the column configuration. While the mouse is over a column heading, the column's delimiters are visible and can be dragged to adjust its width. A triangle icon indicates whether a column is sorted in ascending or descending order. To sort a column or change the sorting direction, click the column heading. Sorting data columns that contain non-indexed data can be very slow for tables with many records. Double-clicking on the heading of a sorted column will terminate the sorting. The column sorting is saved as part of the column configuration and remains active when the table is accessed again later.</p> </li> <li> <p>An indicator that signals the presence of columns not currently displayed in the datatable. These may be columns that have been manually hidden in the column configuration, or newly discovered columns encountered while scrolling through the data, when the system is configured not to display such columns automatically. When hovering over the number, a tooltip appears showing details about the hidden columns, along with an icon that serves as a shortcut to the column configuration.</p> </li> <li> <p>Clicking on a data row selects the row, clicking again deselects it. Selected rows are displayed with a different background color, and their total number is shown in .</p> </li> <li> <p>When the mouse hover over a table row, icons appear that allow to delete or edit the displayed data. The editing of row data is done in a textarea below the datatable as javascript code.</p> </li> <li> <p>Below the datatable, information about and actions for the selected records are displayed. The select all checkbox de-/selects all data rows that are displayed based on the filter entries. The select page checkbox does the same with the data rows on the currently displayed on the screen. The  icon behind the number of selected records is used to display the selection tools.</p> </li> </ol>"},{"location":"datatable/#table-tools","title":"Table Tools","text":"<p>While in the datatable view, the table tools are accessed via the  icon displayed in the window title. In addition, the table tools can be accessed by clicking on the gear icon that appears when hovering over a row of the table list in the database view.</p> <p></p>"},{"location":"datatable/#import-data","title":"Import Data","text":"<p>Select which data format to use for the import: Dexie, JSON or CSV. After a file is selected, the contained data is imported into the displayed table and when finished, the datatable view is updated. Hovering over the  icon displays the relevant import settings for the selected format and provides a shortcut to adjust the import configuration. </p> <p></p>"},{"location":"datatable/#export-data","title":"Export Data","text":"<p>Using the dropdown list, the export format can be changed between Dexie format, JSON and CSV. The file name for the export file follows the pattern saved in the export configuration. If the filename field is selected, the pattern is displayed and can be edited. A modified pattern is saved in the configuration of the table. If the mouse hovers over the  icon, a layer with the export settings relevant for the selected format is displayed. The  icon present in this settings layer can be used to adjust the export configuration.</p> <p></p>"},{"location":"datatable/#copy-table","title":"Copy Table","text":"<p>In copy table a copy of the source table is created by clicking on the execute button. The table name to use for the newly created table is pre-filled with an unique name. All existing host databases can be selected as target database with the default that the table is created in the source database.</p> <p>If copy data is not checked, an empty table is created with the indexes of the source table. The last checkbox determines what happens after the copy is created, whether the copy is displayed afterwards or whether the view of the source table remains.</p> <p></p>"},{"location":"datatable/#empty-table","title":"Empty Table","text":"<p>By clicking on empty table and subsequent confirming, all existing records will be deleted from the table.</p> <p></p>"},{"location":"datatable/#drop-table","title":"Drop Table","text":"<p>After confirmation, the table and all data it contains will be irrevocably deleted. Since the action modifies the database schema, the database version is incremented by 1.</p> <p></p>"},{"location":"datatable/#selection-tools","title":"Selection Tools","text":"<p>Clicking on the  icon, which appears below the data table as soon as data records are selected, opens the layer with the tools available for actions on the selection.</p> <p></p> <p>By using invert selection the selection state is changed for all records in the table.</p> <p>After using clear selection no records are selected anymore.</p> <p>delete selected rows will ask for confirmation before the selected data sets are deleted from the table.</p> <p>export data in the selection tools exports the selected data records in Dexie, JSON or CSV format. Except for the limitation of the amount of data by the selection, the use is identical to the table tools: export functionality. The settings available when exporting are described in the Configuration / Export section.</p>"},{"location":"datatable/#javascript-textarea","title":"JavaScript Textarea","text":"<p>The text area is displayed below the data table by default, but can be hidden in the behavior configuration, item . In addition to executing arbitrary JavaScript, the text area is used to edit data records (see item  above).</p> <p></p> <p>Some global variables are available for use in the JavaScript code:</p> Name Value db Dexie database object as returned from <code>await Dexie.open('dbname')</code> of the currently selected database. table Dexie Table object of the currently selected object store. selection Dexie Collection object of the selected data records. row a JavaScript object holding the data of a record that has been selected for editing. Only available when editing data. <p>The chevron navigation below the textarea can be used to switch between saved JavaScript codes. If the navigation is in the first position, the letter u signals that the code is unsaved. The icons on the right side of the navigation appear depending on the state of the entered code. The  icon is used to save a new code, the  to update a changed code and the  to delete a previously saved code.</p>"},{"location":"origin/","title":"Origin View","text":"<p>IndexedDB databases are stored by following the same-origin policy. A website can store and access data only for its own origin, consisting of protocol, domain and port, and Kahuna displays the databases stored for an origin. This databases, if any, are listed on the initial view when Kahuna is invoked. If no databases exist you get offered to import a database or to create a new one. While in the origin view, importing and creating new databases is also posible by clicking on the  icon in the window title bar. The same gear icon in the title bar invokes the database tools while in the database view and the table tools if a datatable is displayed.</p> <p>The  icon in the window title bar of the database list invokes the application's global configuration and settings, which also serve as default settings for all databases and tables.</p>"},{"location":"origin/#database-list","title":"Database List","text":"<p>To refresh the list or to return to this list from another view, click on the origin part of the breadcrump in the window title. To display the table list with the details for one of the listed databases, click on the corresponding row in the table.</p> <p>In the application settings, item , you can enter table names that should not appear in the database list. Empty tables are listed here by default, even if they are excluded from notifications in the settings, item .</p> <p>When hovering a row, another  icon fades in that let you apply the database related tools. </p> <p></p>"},{"location":"origin/#origin-tools","title":"Origin Tools","text":"<p>The layer with the origin tools is displayed when  is clicked in the window title bar of the database list. With the origin tools, databases can be imported and new, empty databases can be created.</p>"},{"location":"origin/#import-database","title":"Import Database","text":"<p> A new database will be created or an existing database will be overwritten if a file in Dexie format is selected. The settings applied are listed when the  icon is hovered. Most of the settings are relevant only for overwriting an existing database and they are explained in import configuration. Once a file has been selected, the import will start; no further activation is requested.</p> <p></p>"},{"location":"origin/#create-database","title":"Create Database","text":"<p> This creates a new database with the specified name. Entering a table name and the associated indexes is optional. If used, the specified table becomes part of the created database. In the example shown on the left, the database <code>statistics</code> is created, which contains a table <code>counter</code>. The table will have an autoincrement primary key and additional indexes for the fields <code>url</code> and <code>ts</code>. The syntax for index strings is described in the dexie documentation.</p> <p></p>"}]}